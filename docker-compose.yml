
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: farmbooking
      ADMIN_PASSWORD_HASH: ${ADMIN_PASSWORD_HASH:-}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d farmbooking"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks: [appnet]              # <-- add this

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://postgres:postgres@db:5432/farmbooking}
      JWT_SECRET: ${JWT_SECRET:-change-me-please}
      ACCESS_TOKEN_MINUTES: ${ACCESS_TOKEN_MINUTES:-120}
    depends_on:
      db:
        condition: service_healthy
    networks: [appnet]

  web:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_BASE: /api
    depends_on:
      - api
    ports:
      - "8080:8080"
    networks: [appnet]


volumes:
  db_data:

networks:
  appnet:
    driver: bridge


